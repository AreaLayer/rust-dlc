on: [push, pull_request]

name: Continuous integration

jobs:
  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: install clippy
        run: rustup component add clippy
      - name: Run clippy
        run: cargo clippy -- -D warnings
  unit-tests:
    name: unit-tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build
        run: cargo build --verbose
      - name: Test
        run: cargo test --verbose --all-features

  integration_tests_prepare:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/cache@v2
        env:
          cache-name: test-cache
        with:
          path: target/debug/deps
          key: test-cache-${{ github.run_id }}-${{ github.run_number }}
      - uses: actions/checkout@v2
      - id: set-matrix
        run: cargo test --no-run && echo "::set-output name=matrix::$(scripts/get_test_list.sh execution manager)"
  integration_tests:
    name: integration-tests
    needs: integration_tests_prepare
    runs-on: ubuntu-latest
    strategy:
      matrix:
        tests: ${{ fromJson(needs.integration_tests_prepare.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        env:
          cache-name: test-cache
        with:
          path: target/debug/deps
          key: test-cache-${{ github.run_id }}-${{ github.run_number }}
      - name: Pin secp256k1-sys
        run: cargo generate-lockfile --verbose && cargo update -p secp256k1-sys --precise "0.4.1" --verbose
      - name: Start bitcoin node
        run: ./scripts/start_node.sh
      - name: Wait for container to run
        run: ./scripts/wait_for_container.sh bitcoin-node
      - name: Run test
        run: RUST_BACKTRACE=1 ${{ matrix.tests }} --ignored
      - name: Stop bitcoin node
        run: ./scripts/stop_node.sh
